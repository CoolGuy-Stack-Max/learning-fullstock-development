"""create admin_customer_orders

Revision ID: 7b3240fe7c75
Revises: 
Create Date: 2025-07-27 11:45:19.371753

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '7b3240fe7c75'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('admin_customer_orders',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('order_no', sa.String(length=50), nullable=False),
    sa.Column('customer_name', sa.String(length=100), nullable=False),
    sa.Column('order_date', sa.Date(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_index(op.f('ix_public_admin_customer_orders_id'), 'admin_customer_orders', ['id'], unique=False, schema='public')
    op.create_index(op.f('ix_public_admin_customer_orders_order_no'), 'admin_customer_orders', ['order_no'], unique=True, schema='public')
    op.drop_table('products')
    op.drop_table('persons')
    op.drop_table('orders')
    op.drop_table('websites')
    op.drop_table('students')
    op.drop_table('customers_list')
    op.drop_table('apps')
    op.drop_table('employees')
    op.drop_table('products_list')
    op.drop_table('pets')
    op.drop_table('order_list_table')
    op.drop_table('customers')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('customers',
    sa.Column('customerid', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('customername', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('customerid', name='customers_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('order_list_table',
    sa.Column('orderid', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('ordernumber', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('customerid', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['customerid'], ['customers.customerid'], name=op.f('order_list_table_customerid_fkey')),
    sa.PrimaryKeyConstraint('orderid', name=op.f('order_list_table_pkey'))
    )
    op.create_table('pets',
    sa.Column('petid', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('petname', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('host', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('petid', 'petname', name=op.f('pet_id_name'))
    )
    op.create_table('products_list',
    sa.Column('productid', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('productname', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('price', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True),
    sa.CheckConstraint('price >= 0::numeric', name=op.f('products_list_price_check')),
    sa.PrimaryKeyConstraint('productid', name=op.f('products_list_pkey'))
    )
    op.create_table('employees',
    sa.Column('employeeid', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('lastname', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('firstname', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.UniqueConstraint('email', name=op.f('employees_email_key'), postgresql_include=[], postgresql_nulls_not_distinct=False),
    sa.UniqueConstraint('employeeid', name=op.f('employees_employeeid_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_table('apps',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('appname', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('url', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('country', sa.VARCHAR(length=50), autoincrement=False, nullable=True)
    )
    op.create_table('customers_list',
    sa.Column('customerid', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('lastname', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('firstname', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('joindate', sa.DATE(), server_default=sa.text('CURRENT_DATE'), autoincrement=False, nullable=True),
    sa.Column('updatedate', sa.DATE(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('customerid', name=op.f('customers_list_pkey'))
    )
    op.create_table('students',
    sa.Column('studentid', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('lastname', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('firstname', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('age', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('enrollmentdate', sa.DATE(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.CheckConstraint('age >= 18', name=op.f('age_check')),
    sa.CheckConstraint('age >= 18', name=op.f('students_age_check')),
    sa.PrimaryKeyConstraint('studentid', name=op.f('students_pkey')),
    sa.UniqueConstraint('email', name=op.f('students_email_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_table('websites',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('url', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('alexa', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('country', sa.VARCHAR(length=50), autoincrement=False, nullable=True)
    )
    op.create_table('orders',
    sa.Column('orderid', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('customerid', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('productname', sa.VARCHAR(length=50), autoincrement=False, nullable=True)
    )
    op.create_table('persons',
    sa.Column('personid', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('lastname', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('firstname', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('address', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('city', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.UniqueConstraint('personid', 'lastname', name=op.f('personid_lastname'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_table('products',
    sa.Column('productid', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('productname', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('category', sa.VARCHAR(length=50), autoincrement=False, nullable=True)
    )
    op.drop_index(op.f('ix_public_admin_customer_orders_order_no'), table_name='admin_customer_orders', schema='public')
    op.drop_index(op.f('ix_public_admin_customer_orders_id'), table_name='admin_customer_orders', schema='public')
    op.drop_table('admin_customer_orders', schema='public')
    # ### end Alembic commands ###
